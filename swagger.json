{
  "swagger" : "2.0",
  "info" : {
    "description" : "<p>Документ описывает интеграцию серверной части приложения Московский Транспорт (МТ) и сервисом каршеринга.</p>\n<p>Данный API предстоит реализовать сервису каршеринга.</p>\n<p>Доступ к API каршеринга должен быть ограничен списком разрешённых IP адресов МТ.</p>\n<p>Доступ к API на стороне МТ будет ограничен списком IP адресов каршеринг сервисов, а также уникальным API ключом для каждого каршеринга. Данный API ключ необходимо передавать в HTTP заголовке Api-Key.</p>\n<p>Для работы с API каршеринга, МТ должен получить API токен для каждого пользователя (см. ниже метод POST /token). Токен передаётся в каждый метод в HTTP заголовке User-Token.</p>\n",
    "title" : "MT + сервисы каршеринга"
  },
  "tags" : [ {
    "name" : "carsharing",
    "description" : "API методы реализованные на стороне каршеринг-сервиса"
  }, {
    "name" : "mt",
    "description" : "API методы реализованные на стороне МТ"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/token" : {
      "post" : {
        "tags" : [ "carsharing" ],
        "summary" : "Получение авторизационного токена для работы с API",
        "description" : "<p>Метод принимает номер телефона пользователя, который намеревается начать работу с системой каршеринга. Номер телефона заранее был верифицирован СМС сообщением на стороне МТ.</p>\n<p>Время жизни предоставленного токена - 14 дней, по истечению которых токен необходимо запросить заново.</p>\n<p>При наличии авторизационных систем на стороне каршеринга возможна передача токена, который будет получен из этой системы (например, Яндекс.Паспорта).</p>\n<p>В случае, если на этот номер телефона есть зарегистрированный пользователь и он имеет права на использования сервиса - метод возвращает API токен, который будет использован при обращении к другим методах.</p>\n</p>\n",
        "operationId" : "tokenCreate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Данные для получения токена",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TokenDto"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "External-Auth-Token",
          "in" : "header",
          "description" : "Авторизационный токен из внешней системы авторизации",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/TokenEntity"
            }
          },
          "400" : {
            "description" : "Ошибка при выдаче токена",
            "schema" : {
              "$ref" : "#/definitions/ErrorTokenCreationEntity"
            }
          }
        }
      }
    },
    "/policy" : {
      "get" : {
        "tags" : [ "carsharing" ],
        "summary" : "Получение текста политики конфиденциальности и правил сервиса",
        "description" : "<p>Метод возвращает текст правил и политики конфиденциальности сервиса, которые пользователь должен принять при работе с сервисом.</p>\n<p>Предусмотрен параметр version, в котором необходимо передавать дату последнего обновления текста. Данное поле необходимо, чтобы получить повторное согласие пользователя в случае обновления правил.</p>\n<p>В качестве версии оферты можно передавать уникальное строковое значение, которое будет сравниваться с предыдущим значением, которое было получено и сохранено в МТ.\nНапример, таким значением может выступать версия оферты (v1, v2 и тд) или дата обновления оферты на стороне оператора.</p>\n",
        "operationId" : "policyGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ { }, {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/PolicyEntity"
            }
          }
        }
      }
    },
    "/car/{id}" : {
      "get" : {
        "tags" : [ "carsharing" ],
        "summary" : "Получение информации об автомобиле",
        "description" : "<p>Метод используется для вывода информации об автомобиле и доступных тарифах для него.</p>\n<p>Метод вызывается в момент открытия пользователем карточки автомобиля.</p>\n<p>Метод может вызываться без передачи авторизационного токена - в этом случае информация\nдолжна возвращаться для неавторизованного пользователя. Для такого пользователя\nдопустимо возвращении стоимости в различном диапазоне (например, стоимость минуты поездки от 7 до 10 рублей).\nДля авторизованного состояния для вывода стоимости будет использована минимальная граница (поле min).\n</p>\n",
        "operationId" : "carGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID автомобиля из РНИС",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ { }, {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "Переданный токен невалиден. Ошибка возникает в случае если переданный\nтокен пользователя является невалидным (устарел или не существует).\n"
          },
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/CarEntity"
            }
          }
        }
      }
    },
    "/ride" : {
      "get" : {
        "tags" : [ "carsharing" ],
        "summary" : "Возвращает информацию об активной поездке пользователя",
        "description" : "<p>Метод возвращает сущность активной поездки пользователя.</p>\n<p>В случае, если у пользователя отсутствует поездка - в поле status возвращается значение <i>notFound</i>\n(поля ride и deepLink в этом случае = null).</p>\n<p>В случае, если у пользователя есть поездка, но она была иницирована не через МТ, в поле status следует\nпередать значение <i>rideService</i> и в поле deepLink передать диплинк для перехода в\nприложения оператора каршеринга.</p>\n<p>В случае, если у пользователя имеется активная поездка, которая была иницирована через МТ,\nв поле status возвращается со значением <i>active</i>, в поле ride передаётся сущность поездки.\n",
        "operationId" : "currentRideGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/ActiveRideInfoEntity"
            }
          },
          "401" : {
            "description" : "Переданный токен невалиден"
          },
          "404" : {
            "description" : "На данный момент у пользователя нет активных поездок"
          }
        }
      },
      "post" : {
        "tags" : [ "carsharing" ],
        "summary" : "Бронирование автомобиля за пользователем",
        "description" : "<p>Метод брони автомобиля за пользователем.</p>\n<p>В момент создания брони на стороне каршеринг сервиса\nпроисходит холдирование средств за поездку. </p>\n",
        "operationId" : "rideCreate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Данные для бронирования автомобиля",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RideDto"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/RideCreatedEntity"
            }
          },
          "400" : {
            "description" : "Ошибка при бронировании",
            "schema" : {
              "$ref" : "#/definitions/ErrorRideCreationEntity"
            }
          },
          "401" : {
            "description" : "Переданный токен невалиден"
          }
        }
      }
    },
    "/ride/{id}" : {
      "get" : {
        "tags" : [ "carsharing" ],
        "summary" : "Получение брони по ID",
        "description" : "Метод возвращает сущность поездки.",
        "operationId" : "rideGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID поездки",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/RideEntity"
            }
          },
          "401" : {
            "description" : "Переданный токен невалиден"
          },
          "404" : {
            "description" : "Поездка с переданным ID не найдена у переданного пользователя"
          }
        }
      }
    },
    "/ride/{id}/cancel-request" : {
      "post" : {
        "tags" : [ "carsharing" ],
        "summary" : "Запрос на отмену брони",
        "description" : "<p>Метод используется для проверки возможности отмены брони и получения сообщения, которое пользователь увидит\nна подтверждающем отмену шаге.</p>\n",
        "operationId" : "rideCancelRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID поездки",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Данные для запроса на отмену брони",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RideCancelRequestDto"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/RideCancelConfirmEntity"
            }
          },
          "400" : {
            "description" : "Ошибка при отмене брони",
            "schema" : {
              "$ref" : "#/definitions/ErrorRideCancelEntity"
            }
          },
          "401" : {
            "description" : "Переданный токен невалиден"
          },
          "405" : {
            "description" : "Данный метод не реализован на стороне оператора. В этом случае следом за этим методом будет вызван метод /ride/{id}/cancel-confirm без передачи confirmationRequestId"
          }
        }
      }
    },
    "/ride/{id}/cancel-confirm" : {
      "post" : {
        "tags" : [ "carsharing" ],
        "summary" : "Подтверждение отмены брони",
        "description" : "<p>\nМетод используется для подтверждения отмены брони автомобиля.\nВ метод передаётся ID запроса на отмену брони, который\nпредварительно был получен из метода /ride/{id}/cancel/request.\n</p>\n<p>\nВ случае, если на стороне оператора каршеринга отмена не выполняется в момент обращения к методу API,\nметод возврает статус canceling. В этом случае на стороне МТ с периодиностью в 3 секунды будет\nопрашиваться API метод получения брони по ID для получения подтверждения\nотмены (перевод поездки в статус canceled).\n</p>\n",
        "operationId" : "rideCancelConfirm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID поездки",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Данные для отмены брони",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RideCancelConfirmDto"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Успех операции",
            "schema" : {
              "$ref" : "#/definitions/RideEntity"
            }
          },
          "400" : {
            "description" : "Ошибка при бронировании",
            "schema" : {
              "$ref" : "#/definitions/ErrorRideCancelEntity"
            }
          },
          "401" : {
            "description" : "Переданный токен невалиден"
          },
          "404" : {
            "description" : "Поездка с переданным ID не найдена у переданного пользователя"
          }
        }
      }
    },
    "/zone-set/{id}" : {
      "get" : {
        "tags" : [ "carsharing" ],
        "summary" : "Получение набора зон по ID",
        "description" : "Метод возвращает набор зон, в которых возможно совершить поездку, запрещённые и доступные для завершения аренды.\nВ метод передаётся ID набора зон, который приходит в карточке автомобиля (availableZoneSet.id).\nВызов метода будет происходить в том случае, если информация о наборе зон с таким ID отсутствует в БД МТ, или набор зон был обновлён (параметр availableZoneSet.updatedAt в карточке автомобиля)\n",
        "operationId" : "zoneSetGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID набора зон",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        }, {
          "name" : "User-Location",
          "in" : "header",
          "description" : "Координаты пользователя в формате широта,долгота",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "userTokenSec" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Набор зон",
            "schema" : {
              "$ref" : "#/definitions/ZoneSetEntity"
            }
          },
          "404" : {
            "description" : "Набор зон с переданным ID не найден"
          }
        }
      }
    },
    "/ride-info" : {
      "post" : {
        "tags" : [ "mt" ],
        "summary" : "Оповещение об изменениях в поездке",
        "description" : "<p>Метод для оповещения изменении поездки на стороне сервиса каршеринга.</p>\n<p>Адрес метода: <b>POST https://carsharing.moscowtransport.app/ride</b></p>\n<p>Метод вызывается каршеринг-сервисом в момент изменения состояния поездки:\n  <ul>\n    <li>отмена поездки пользователем в приложении каршеринга;</li>\n    <li>начало поездки;</li>\n    <li>завершение поездки;</li>\n    <li>найден штраф по поездке;</li>\n    <li>оплачен штраф по поездке;</li>\n    <li>перевод автомобиля в режим ожидания.</li>\n  </ul>\n</p>\n",
        "operationId" : "rideNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Данные поездки",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RideEntity"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Выбранный язык пользователя в приложении МТ",
          "required" : true,
          "type" : "string",
          "enum" : [ "ru", "en" ]
        } ],
        "deprecated" : true,
        "responses" : {
          "200" : {
            "description" : "Успех операции"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "userTokenSec" : {
      "description" : "Токен пользователя, полученный в рамках вызова метода POST /token",
      "type" : "apiKey",
      "name" : "UserToken",
      "in" : "header"
    }
  },
  "definitions" : {
    "TokenDto" : {
      "type" : "object",
      "required" : [ "phoneNum" ],
      "properties" : {
        "phoneNum" : {
          "type" : "integer",
          "description" : "Номер телефона в формате <i>70000000000</i> (только цифры)"
        },
        "birthday" : {
          "type" : "string",
          "description" : "Дата рождения пользователя в формате YYYY-MM-DD. Актуально для некоторых операторов, у которых при выдаче токена необходимо сверять дату рождения пользователя."
        }
      }
    },
    "RideDto" : {
      "type" : "object",
      "required" : [ "carId", "offerId", "policyVersion", "userLocation" ],
      "properties" : {
        "carId" : {
          "type" : "string",
          "description" : "ID автомобиля"
        },
        "offerId" : {
          "type" : "string",
          "description" : "ID тарифа"
        },
        "policyVersion" : {
          "type" : "string",
          "description" : "Версия оферты, которая принята у пользователя на стороне МТ. Поле может быть null, если схема работы оператора не предполагает принятия оферты (конфигурируется на стороне МТ для каждого оператора)."
        },
        "userLocation" : {
          "description" : "Позиция пользователя в момент оформления заказа",
          "$ref" : "#/definitions/LocationDto"
        }
      }
    },
    "RideCancelRequestDto" : {
      "type" : "object",
      "required" : [ "userLocation" ],
      "properties" : {
        "userLocation" : {
          "$ref" : "#/definitions/LocationDto"
        }
      }
    },
    "RideCancelConfirmDto" : {
      "type" : "object",
      "properties" : {
        "confirmationRequestId" : {
          "type" : "string",
          "description" : "ID запроса на отмену, который получен из метода /ride/{id}/cancel/request. Поле может быть null (см. описание метода /ride/{id}/cancel-request)"
        }
      }
    },
    "ActiveRideInfoEntity" : {
      "type" : "object",
      "required" : [ "deepLink", "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "",
          "enum" : [ "active", "serviceRide" ]
        },
        "ride" : {
          "description" : "Сущность активной поездки пользователя. Может быть null во всех случаях, кроме случая активной поездки, которая создана пользователем через МТ.",
          "$ref" : "#/definitions/RideActiveEntity"
        },
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга. Заполняется в случае, если у пользователя есть активная поездка, которая создана на стороне оператора."
        }
      }
    },
    "RideActiveEntity" : {
      "type" : "object",
      "required" : [ "car", "createdAt", "deepLink", "drivingInfo", "id", "inspectionInfo", "offer", "pointStart", "startedAt", "status", "summaryInfo", "waitingInfo" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID поездки"
        },
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга"
        },
        "specialMessage" : {
          "type" : "string",
          "description" : "Сообщение, которое можно вывести в карточке автомобиля (при необходимости). Текст сообщения следует сформировать исходя из языковых настроек пользователя."
        },
        "car" : {
          "description" : "Информация об автомобиле",
          "$ref" : "#/definitions/RideCarEntity"
        },
        "offer" : {
          "description" : "Информация о используемом тарифе в рамках этой брони",
          "$ref" : "#/definitions/OfferRangeEntity"
        },
        "waitingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideWaitingInfoEntity"
        },
        "inspectionInfo" : {
          "description" : "Информация об инспектировании автомобиля",
          "$ref" : "#/definitions/RideInspectionInfoEntity"
        },
        "drivingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideDriveInfoEntity"
        },
        "parkingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideParkingInfoEntity"
        },
        "summaryInfo" : {
          "description" : "Общая информация о поездке",
          "$ref" : "#/definitions/RideSummaryInfoEntity"
        },
        "pointStart" : {
          "description" : "Точка старта поездки (откуда поездка была начата - по сути является точкой автомобиля при брони)",
          "$ref" : "#/definitions/LocationEntity"
        },
        "createdAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время создания брони в формате timestamp (секунды)"
        },
        "startedAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время старта поездки (пользователь осмотрел автомобиль и начал аренду) в формате timestamp (секунды). Может быть null, если аренда ещё не начата."
        },
        "status" : {
          "type" : "string",
          "description" : "Статус поездки",
          "enum" : [ "active", "parking", "canceling", "inspection" ]
        }
      }
    },
    "RideEntity" : {
      "type" : "object",
      "required" : [ "car", "createdAt", "deepLink", "drivingInfo", "id", "inspectionInfo", "offer", "pointStart", "status", "summaryInfo", "waitingInfo" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID поездки"
        },
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга"
        },
        "specialMessage" : {
          "type" : "string",
          "description" : "Сообщение, которое можно вывести в карточке автомобиля (при необходимости). Текст сообщения следует сформировать исходя из языковых настроек пользователя."
        },
        "car" : {
          "description" : "Информация об автомобиле",
          "$ref" : "#/definitions/RideCarEntity"
        },
        "offer" : {
          "description" : "Информация о используемом тарифе в рамках этой брони",
          "$ref" : "#/definitions/OfferRangeEntity"
        },
        "waitingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideWaitingInfoEntity"
        },
        "inspectionInfo" : {
          "description" : "Информация об инспектировании автомобиля",
          "$ref" : "#/definitions/RideInspectionInfoEntity"
        },
        "drivingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideDriveInfoEntity"
        },
        "parkingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideParkingInfoEntity"
        },
        "summaryInfo" : {
          "description" : "Общая информация о поездке",
          "$ref" : "#/definitions/RideSummaryInfoEntity"
        },
        "pointStart" : {
          "description" : "Точка старта поездки (откуда поездка была начата - по сути является точкой автомобиля при брони)",
          "$ref" : "#/definitions/LocationEntity"
        },
        "pointFinish" : {
          "description" : "Точка завершения поездки. Может быть null, если поездка ещё не завершена.",
          "$ref" : "#/definitions/LocationEntity"
        },
        "createdAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время создания брони в формате timestamp (секунды)"
        },
        "startedAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время старта поездки (пользователь осмотрел автомобиль и начал аренду) в формате timestamp (секунды). Может быть null, если аренда ещё не начата."
        },
        "canceledAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время отмены брони в формате timestamp (секунды). Может быть null, если поездка не была отменена."
        },
        "finishedAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время завершения поездки в формате timestamp (секунды). Может быть null, если поездка ещё не завершена."
        },
        "status" : {
          "type" : "string",
          "description" : "Статус поездки",
          "enum" : [ "booking", "active", "parking", "finished", "canceling", "canceled", "inspection" ]
        }
      }
    },
    "RideCreatedEntity" : {
      "type" : "object",
      "required" : [ "car", "createdAt", "deepLink", "id", "inspectionInfo", "offer", "pointStart", "waitingInfo" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID поездки"
        },
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга"
        },
        "specialMessage" : {
          "type" : "string",
          "description" : "Сообщение, которое можно вывести в карточке автомобиля при необходимости"
        },
        "car" : {
          "description" : "Информация об автомобиле",
          "$ref" : "#/definitions/RideCarEntity"
        },
        "offer" : {
          "description" : "Информация о используемом тарифе в рамках этой брони",
          "$ref" : "#/definitions/OfferRangeEntity"
        },
        "waitingInfo" : {
          "description" : "Информация о времени ожидания",
          "$ref" : "#/definitions/RideWaitingInfoEntity"
        },
        "inspectionInfo" : {
          "description" : "Информация об инспектировании автомобиля",
          "$ref" : "#/definitions/RideInspectionInfoEntity"
        },
        "pointStart" : {
          "description" : "Точка старта поездки (откуда поездка была начата - по сути является точкой автомобиля при брони)",
          "$ref" : "#/definitions/LocationEntity"
        },
        "createdAt" : {
          "type" : "integer",
          "example" : 1637917148,
          "description" : "Время создания брони в формате timestamp (секунды)"
        }
      }
    },
    "RideWaitingInfoEntity" : {
      "type" : "object",
      "properties" : {
        "freeUntil" : {
          "type" : "integer",
          "description" : "Время в формате timestamp (секунды) до которого время ожидания является бесплатным"
        },
        "pricePerMin" : {
          "type" : "number",
          "example" : 255.0,
          "description" : "Текущая стоимость минуты ожидания (в копейках). В поле следует передавать стоимость режима ожидания согласно тарифу (информацию не берём напрямую из тарифа, т.к. у некоторых операторов стоимость в тарифе может быть диапазоном)"
        },
        "totalDuration" : {
          "type" : "integer",
          "example" : 180,
          "description" : "Текущая длительность режима ожидания в рамках поездки (в секундах)"
        },
        "totalPrice" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "Текущая стоимость за режим ожидание в рамках поездки (в копейках)"
        }
      }
    },
    "RideInspectionInfoEntity" : {
      "type" : "object",
      "properties" : {
        "freeUntil" : {
          "type" : "integer",
          "description" : "Время в формате timestamp (секунды) до которого время режима осмотра является бесплатным"
        },
        "pricePerMin" : {
          "type" : "integer",
          "description" : "Стоимость минуты осмотра автомобиля после бесплатного времени в копейках"
        },
        "totalPrice" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Итоговая стоимость за инспектирование автомобиля (в копейках)"
        }
      }
    },
    "RideSummaryInfoEntity" : {
      "type" : "object",
      "properties" : {
        "totalDuration" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Итоговая длительность поездки (в секундах)"
        },
        "totalPrice" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Итоговая стоимость за поездку (в копейках)"
        }
      }
    },
    "RideCancelConfirmEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "<p>ID подтверждения отмены, который необходим отправить в метод /ride/{id}/cancel-confirm.</p>\n<p>\nПоле может быть null, если у оператора каршеринга нет необходимости о чём-то\nпредупредить пользователя при отмене брони. В этом случае будет вызван метод /ride/{id}/cancel-confirm с\nпустым полем confirmationRequestId в запросе.</p>\n"
        },
        "message" : {
          "type" : "string",
          "description" : "Сообщение, которое получит пользователь на подтверждающем экране при отмене брони. Поле может быть null, если у оператора каршеринга нет необходимости о чём-то предупредить пользователя при отмене брони."
        }
      }
    },
    "RideDriveInfoEntity" : {
      "type" : "object",
      "required" : [ "distance" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Статус расчёта стоимости. Если стоимость поездки не окончательная и требуется время для точного расчёта - в поле следует передать значение calculation. В случае если стоимость поездки расчитана в окончательном вариенте, значение поля - calculated.",
          "enum" : [ "calculated", "calculation" ]
        },
        "distance" : {
          "type" : "number",
          "example" : 120.0,
          "description" : "Дистанция в метрах, которую проехал пользователь в рамках поездки"
        },
        "totalDuration" : {
          "type" : "integer",
          "example" : 180,
          "description" : "Общая длительность поездки (аренды автомобиля, значение в секундах)"
        },
        "totalPrice" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Итоговая стоимость за поездку на автомобиле (в копейках)"
        }
      }
    },
    "RideParkingInfoEntity" : {
      "type" : "object",
      "properties" : {
        "totalDuration" : {
          "type" : "integer",
          "example" : 180,
          "description" : "Общая длительность парковки (значение в секундах)"
        },
        "totalPrice" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Итоговая стоимость за парковку автомобиля (в копейках)"
        }
      }
    },
    "RideCarEntity" : {
      "type" : "object",
      "required" : [ "fuelCapacity", "model", "number", "position" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "fuelCapacity" : {
          "$ref" : "#/definitions/FuelCapacity"
        },
        "position" : {
          "$ref" : "#/definitions/LocationEntity"
        },
        "number" : {
          "type" : "string",
          "example" : "у522уу799",
          "description" : "Гос. номер автомобиля"
        },
        "model" : {
          "type" : "string",
          "example" : "BMW 3-series",
          "description" : "Марка + модель автомобиля"
        }
      }
    },
    "TokenEntity" : {
      "type" : "object",
      "required" : [ "token", "validUntil" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : "16 символьный уникальный токен для пользователя."
        },
        "validUntil" : {
          "type" : "integer",
          "example" : 1637907497,
          "description" : "Дата в формате timestamp, до которой токен будет валидный (секунды)"
        }
      },
      "description" : "Токен конкретного пользователя для работы с API методами.\n"
    },
    "PolicyEntity" : {
      "type" : "object",
      "required" : [ "version" ],
      "properties" : {
        "content" : {
          "type" : "string",
          "description" : "Текст правил сервиса и политики конфиденциальности: h1, p, strong, img, a\n"
        },
        "version" : {
          "type" : "string",
          "description" : "Версия оферты"
        }
      }
    },
    "FuelCapacity" : {
      "type" : "object",
      "required" : [ "type", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "example" : 12.4,
          "description" : "Доступный уровень топлива для автомобиля в километрах или %"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "km", "percent" ]
        }
      }
    },
    "CarEntity" : {
      "type" : "object",
      "required" : [ "carNum", "deepLink", "fuelCapacity", "id", "location", "model", "offer", "zones" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга на карточку этого автомобиля"
        },
        "fuelCapacity" : {
          "$ref" : "#/definitions/FuelCapacity"
        },
        "carNum" : {
          "type" : "string",
          "example" : "у522уу799",
          "description" : "Гос. номер автомобиля"
        },
        "model" : {
          "type" : "string",
          "example" : "BMW 3-series",
          "description" : "Марка + модель автомобиля"
        },
        "zones" : {
          "$ref" : "#/definitions/CarZonesEntity"
        },
        "location" : {
          "$ref" : "#/definitions/LocationEntity"
        },
        "forbiddenRentReason" : {
          "type" : "string",
          "description" : "Код причины, по которой пользователю может быть недоступен этот автомобиль.\nВ случае, если автомобиль доступен для текущего пользователя значение поля\nследует оставить в null (или пользователь неавторизован). Возможные коды ошибок:\n<i>lowDriverExperience</i> - низкий стаж вождения\n<i>lowServiceExperience</i> - низкий уровень доверия в сервисе оператора\n<i>carAlreadyBooked</i> - автомобиль уже забронирован другим пользователем\n<i>userDebt</i> - у пользователя есть задолженность перед сервисом каршеринга, необходим пройти в приложение оператора и погасить задолженность\n<i>other</i> - другие причины\n",
          "enum" : [ "lowDriverExperience", "lowServiceExperience", "carAlreadyBooked", "userDebt", "other" ]
        },
        "forbiddenRentReasonMessage" : {
          "type" : "string",
          "description" : "Сообщение, которое будет выводиться пользователю в случае, если он не может взять этот автомобиль в аренду.\nПоле следует передавать, в случае если forbiddenRentReason = other.\n"
        },
        "offer" : {
          "type" : "array",
          "description" : "Доступные тарифы для автомобиля",
          "items" : {
            "$ref" : "#/definitions/OfferRangeEntity"
          }
        }
      }
    },
    "CarInsurancePolicyEntity" : {
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Текстовая информация, которая выводится для пользователя в поле с описанием страховки"
        }
      }
    },
    "CarZonesEntity" : {
      "properties" : {
        "sets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CarZonesSetEntity"
          }
        }
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ZoneSetEntity"
      }, { } ]
    },
    "CarZonesSetEntity" : {
      "type" : "object",
      "properties" : {
        "setId" : {
          "type" : "string",
          "description" : "ID набора зон. Может быть null, если функционал набора зон не зайдействова и доступные зоны для автомобиля передаются в поле zones"
        },
        "setUpdatedAt" : {
          "type" : "integer",
          "example" : 1637907497,
          "description" : "Дата изменения сета зон в timestamp (секунды)"
        }
      }
    },
    "OfferRangeEntity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID предложения цены за аренду. ID будет использован при бронировании автомобиля. Может быть null, в случае если пользователь неавторизон."
        },
        "insurancePolicy" : {
          "$ref" : "#/definitions/CarInsurancePolicyEntity"
        },
        "description" : {
          "type" : "string",
          "description" : "Подробное описание тарифа с поддержкой html тегов: h1, p, strong, img, a\n"
        },
        "prePaymentInformation" : {
          "type" : "string",
          "description" : "Информация для пользователя о списания за поездку. Здесь можно передать информацию о бонусном списании или другую вспомогательную информации об оплате за поездку на этом автомобиле. Есть поддержка HTML тегов strong, p, u, i, a"
        },
        "name" : {
          "type" : "string",
          "example" : "Поминутный",
          "description" : "Название тарифа"
        },
        "usagePrice" : {
          "type" : "integer",
          "example" : 10055,
          "description" : "Стоимость посадки в копейках"
        },
        "holdAmount" : {
          "type" : "integer",
          "example" : 20255,
          "description" : "Сумма предсписания в копейках"
        },
        "freeWaitingTime" : {
          "type" : "integer",
          "description" : "Время бесплатного ожидания брони в секундах. Если бесплатного времени ожидания не предусмотрено, следует пустое значение (null)."
        },
        "offerWaiting" : {
          "description" : "Стоимость минуты ожидания брони",
          "$ref" : "#/definitions/OfferRangePriceEntity"
        },
        "offerParking" : {
          "description" : "Стоимость тарифа для режима парковки автомобиля",
          "$ref" : "#/definitions/OfferRangePriceEntity"
        },
        "offerRiding" : {
          "description" : "Стоимость тарифа для режима поездки",
          "$ref" : "#/definitions/OfferRangePriceEntity"
        },
        "freeInspectionTime" : {
          "type" : "integer",
          "description" : "Время бесплатного времени для осмотра автомобиля в секундах. Если бесплатного времени ожидания не предусмотрено, следует пустое значение (null)."
        },
        "inspectionPricePerMin" : {
          "type" : "integer",
          "description" : "Стоимость минуты платного осмотра автомобиля после истёкшего времени бесплатного осмотра (поле freeInspectionTime). В случае если осмотр автомобиля бесплатный и без ограничения по времени - следует передать null в полях freeInspectionTime, inspectionPricePerMin."
        },
        "validUntil" : {
          "type" : "integer",
          "description" : "Время в timestamp (секунды), до которого дейсвителено это предложение. Может быть null в случае если пользователь не авторизован."
        }
      },
      "description" : "<p>Описание тарифа пользования автомобилем. В случае, если пользозователь неавторизован, есть возможность\nпередавать стоимость в диапазоне от...до (см. поля min/max в сущности OfferRangeEntity). </p>\n<p>Для авторизованного пользователя в поля min/max следует передавать одинаковую стоимость.</p>\n"
    },
    "OfferRangePriceEntity" : {
      "type" : "object",
      "properties" : {
        "min" : {
          "type" : "integer",
          "example" : 799,
          "description" : "Минимальная стоимость в копейках"
        },
        "max" : {
          "type" : "integer",
          "example" : 1099,
          "description" : "Максимальная стоимость в копейках"
        }
      }
    },
    "ZoneSetEntity" : {
      "type" : "object",
      "properties" : {
        "availableForDriving" : {
          "type" : "object",
          "description" : "Геозона (полигон в формате GeoJSON) поездки - зона, в рамках которой можно совершать поездку",
          "properties" : { }
        },
        "forbiddenComplete" : {
          "type" : "array",
          "description" : "Коллекция зон, где запрещено завершать аренду (но можно перевести в режим ожидания)",
          "items" : {
            "$ref" : "#/definitions/ZoneEntity"
          }
        },
        "allowComplete" : {
          "type" : "array",
          "description" : "Коллекция зон, где можно переводить в режим ожидания и завершать аренду",
          "items" : {
            "$ref" : "#/definitions/ZoneEntity"
          }
        }
      }
    },
    "ZoneEntity" : {
      "type" : "object",
      "properties" : {
        "geojson" : {
          "type" : "object",
          "description" : "Геозона в формате GeoJSON",
          "properties" : { }
        },
        "shortDescription" : {
          "type" : "string",
          "example" : "Если поездка выйдет дешевле 1170Р, с карты дополнительно спишется недостающая разница"
        },
        "description" : {
          "type" : "string",
          "example" : "Подробное описание зоны с поддержкой зоны h1, p, strong, img"
        },
        "name" : {
          "type" : "string",
          "example" : "SVO, 1134Р"
        },
        "mapLabel" : {
          "type" : "string",
          "example" : "SVO"
        }
      }
    },
    "LocationDto" : {
      "type" : "object",
      "required" : [ "lat", "lon" ],
      "properties" : {
        "lat" : {
          "type" : "number",
          "example" : 55.747534,
          "description" : "Широта"
        },
        "lon" : {
          "type" : "number",
          "example" : 37.62603,
          "description" : "Долгота"
        }
      }
    },
    "LocationEntity" : {
      "type" : "object",
      "required" : [ "lat", "lon" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "example" : "Москва, ул. Тверская, д. 13",
          "description" : "Адрес, по которому находится автомобиль. Может быть null - в этом случае адрес автомобиля будет отображаться по результату работы геокодера МТ."
        },
        "lat" : {
          "type" : "number",
          "example" : 55.747534,
          "description" : "Широта"
        },
        "lon" : {
          "type" : "number",
          "example" : 37.62603,
          "description" : "Долгота"
        }
      }
    },
    "ErrorRideCreationEntity" : {
      "type" : "object",
      "required" : [ "errorCode" ],
      "properties" : {
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга"
        },
        "message" : {
          "type" : "string",
          "description" : "Текст с описанием ошибки для пользователя. Следует использовать для несогласованных между МТ и оператором\nкаршеринга кодов ошибок. Текст без поддержки HTML тегов. На стороне оператора каршеринга текст следует\nсформировать учитывая выбранный в приложении язык пользователя (передаётся в HTTP заголовке Accept-Language)\n"
        },
        "errorCode" : {
          "type" : "string",
          "description" : "Код ошибки при бронировании автомобиля. Коды ошибок:\n<ul>\n  <li>carNotFound - передан некорректный ID автомобиля;</li>\n  <li>carAlreadyBooked - машина уже забронирована другим пользователем;</li>\n  <li>userHasRide - у пользователя уже есть активная поездка или бронь;</li>\n  <li>depricatedPolicy - принятая пользователем оферта устарела;</li>\n  <li>userDebt - у пользователя есть задолженность;</li>\n  <li>userBlocked - пользователь заблокирован;</li>\n  <li>carNotAvailable - автомобиль недоступен для этого пользователя;</li>\n  <li>paymentError - ошибка при проведении оплаты;</li>\n  <li>invalidOffer - передан неверный или просроченный тариф;</li>\n  <li>tooAwayFromCar - пользователь находится слишком далеко от автомобиля;</li>\n  <li>other - другая ошибка, которую на данный момент не поддерживает логика МТ.</li>\n</ul>\n",
          "enum" : [ "carNotFound", "carAlreadyBooked", "carNotAvailable", "userHasRide", "depricatedPolicy", "userBlocked", "userDebt", "paymentError", "tooAwayFromCar", "other" ]
        }
      }
    },
    "ErrorTokenCreationEntity" : {
      "type" : "object",
      "required" : [ "errorCode" ],
      "properties" : {
        "deepLink" : {
          "type" : "string",
          "description" : "Диплинк для перехода в приложение оператора каршеринга"
        },
        "message" : {
          "type" : "string",
          "description" : "Текст с описанием ошибки для пользователя. Следует использовать для несогласованных между МТ и оператором\nкаршеринга кодов ошибок. Текст без поддержки HTML тегов. На стороне оператора каршеринга текст следует\nсформировать учитывая выбранный в приложении язык пользователя (передаётся в HTTP заголовке Accept-Language).\nМожет быть null, если код ошибки в поле errorCode - одно из зафиксированных в enum значений.\n"
        },
        "errorCode" : {
          "type" : "string",
          "description" : "Код ошибки при бронировании автомобиля. Коды ошибок:\n<ul>\n<li>Пользователь не зарегистрирован в системе (код ошибки userNotFound)</li>\n<li>Пользователь не завершил процедуру регистрации (код ошибки registrationNotComplited). Например: не добавлена банковская карта, не завершена процедура верификации, требуются другие действия для завершения регистрации в мобильном приложении</li>\n<li>У пользователя есть задолженность перед сервисом каршеринга, необходим пройти в приложение оператора и погасить задолженность (код ошибки userDebt)</li>\n<li>Пользователь заблокирован (код ошибки blocked)</li>\n<li>Другая причина (код ошибки other)</li>\n</ul>\n",
          "enum" : [ "userNotFound", "registrationNotComplited", "blocked", "userDebt", "other" ]
        }
      }
    },
    "ErrorRideCancelEntity" : {
      "type" : "object",
      "required" : [ "errorCode" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Текст с описанием ошибки для пользователя. Следует использовать для несогласованных между МТ и оператором\nкаршеринга кодов ошибок. Текст без поддержки HTML тегов. На стороне оператора каршеринга текст следует\nсформировать учитывая выбранный в приложении язык пользователя (передаётся в HTTP заголовке Accept-Language)\n"
        },
        "errorCode" : {
          "type" : "string",
          "description" : "Код ошибки при бронировании автомобиля. Коды ошибок:\n<ul>\n  <li>rideAlreadyCanceled - поездка с переданным ID уже отменена;</li>\n  <li>rideIsActive - поездку нельзя отменить, т.к. поездка в данный момент активна</li>\n  <li>invalidConfirmationRequestId - переданный ID отмены невалиден</li>\n</ul>\n",
          "enum" : [ "rideAlreadyCanceled", "rideIsActive", "invalidConfirmationRequestId" ]
        }
      }
    }
  }
}